/*
** This file is generated by the 'tool' project. Do not modify by hand.
*/

using System;
using System.Collections.Generic;

namespace lox
{
    public abstract class Stmt
    {
        public interface IVisitor<R>
        {
            R VisitExpressionStmt(Expression stmt, in ReadOnlySpan<char> source);
            R VisitPrintStmt(Print stmt, in ReadOnlySpan<char> source);
        }

        public class Expression : Stmt
        {
            public Expression( Expr expression )
            {
                this.expression = expression;
            }

            public readonly Expr expression;

            public override R Accept<R>(IVisitor<R> visitor, in ReadOnlySpan<char> source)
            {
                return visitor.VisitExpressionStmt(this, source);
            }
        }


        public class Print : Stmt
        {
            public Print( Expr expression )
            {
                this.expression = expression;
            }

            public readonly Expr expression;

            public override R Accept<R>(IVisitor<R> visitor, in ReadOnlySpan<char> source)
            {
                return visitor.VisitPrintStmt(this, source);
            }
        }


        public abstract R Accept<R>(IVisitor<R> visitor, in ReadOnlySpan<char> source);
    }
}
